#ifndef SQL_SCRIPTS_H
#define SQL_SCRIPTS_H

#define CHECK_TABLE "SELECT name FROM sqlite_master WHERE type='table' AND name='TRANSACTIONS';"

#define CREATE_TRANSACTION_TABLE \
    "CREATE TABLE TRANSACTIONS \
    (\
        ID INTEGER PRIMARY KEY AUTOINCREMENT,\
        AMOUNT DECIMAL(10,2) NOT NULL,\
        COMMENT VARCHAR,\
        ACCOUNT_ID INTEGER NOT NULL REFERENCES ACCOUNTS(ID),\
        TYPE_ID INTEGER NOT NULL REFERENCES TYPES(ID),\
        DATE TIMESTAMP NOT NULL DEFAULT (DATE('NOW')),\
        EXPENSE_ID INTEGER REFERENCES EXPENSES(ID)\
    );"

#define CREATE_ACCOUNTS_TABLE \
    "CREATE TABLE ACCOUNTS \
    (\
        ID INTEGER PRIMARY KEY AUTOINCREMENT,\
        NAME VARCHAR NOT NULL\
    );"

#define CREATE_TYPES_TABLE \
    "CREATE TABLE TYPES \
    (\
        ID INTEGER PRIMARY KEY AUTOINCREMENT,\
        NAME VARCHAR NOT NULL\
    );"

#define CREATE_EXPENSES_TABLE \
    "CREATE TABLE EXPENSES \
    (\
        ID INTEGER PRIMARY KEY AUTOINCREMENT,\
        EXPENSE VARCHAR NOT NULL,\
        COST DECIMAL(10,2) NOT NULL,\
        FREQUENCY_DAYS INT NOT NULL,\
        PROFILE_ID INTEGER NOT NULL REFERENCES EXPENSE_PROFILES(ID),\
        AUTOMATIC TINYINT NOT NULL DEFAULT 0\
    );"

#define CREATE_EXPENSE_PROFILES_TABLE \
    "CREATE TABLE EXPENSE_PROFILES \
    (\
        ID INTEGER PRIMARY KEY AUTOINCREMENT,\
        START TIMESTAMP NOT NULL\
    );\
    INSERT INTO EXPENSE_PROFILES (START) VALUES (DATE('NOW'));\
    CREATE TRIGGER PREVENT_OVERLAP BEFORE INSERT ON EXPENSE_PROFILES\
    BEGIN\
        SELECT RAISE(ABORT, 'Period overlap. Try a later date')\
        WHERE EXISTS (SELECT 1 FROM EXPENSE_PROFILES WHERE START>=NEW.START);\
    END;"

#endif